---
title: "IC Detection Limit"
author: "Hannah Richardson"
format: html
editor: visual
---

## Detection Limit Equation

DL = 3.3 \* sigma / m

sigma = std deviation of the residuals

m = slope of calibration curve

residuals = difference in observed results from linear model

## Load Data

```{r}
setwd("/Users/hannahrichardson/Documents/BSU/Research/Data/Raw Data/IC data")
list.files()

cat <- read.csv("CATION_CALIBRATION_10Oct.csv")
an <- read.csv("ANION_CALIBRATION_10Oct.csv")
cat.samples<- read.csv('WOLV_Cations_18AUG22.csv')
an.samples <- read.csv('WOLV_AN_18AUG22.csv')
```

## Clean data

The Metrohm automatic export file includes extraneous information about blanks. This pulls only standards 1-6 and 11 from the file. I also assign column names and separate the measured concentrations from the area measurements.c

```{r}
library(data.table)

cat.clean<-cat[cat$Sample.type %like% "Standard",]
an.clean <- an[an$Sample.type %like% "Standard",]

cat.names<-c("Na", "Ammonium", "K", "Mg", "Ca")
an.names <-c("F", "Cl", "Nitrite", "Nitrate", "Phosphate", "Sulfate")

cat.conc <- cat.clean[,3:7] #seperate the x and y data
cat.area<-cat.clean[,8:12]
colnames(cat.conc)<- cat.names
colnames(cat.area)<- cat.names

an.conc <-an.clean[,3:8]
an.area<-an.clean[,9:14]
colnames(an.conc)<- an.names
colnames(an.area)<- an.names
```

## Fit regression line

This fits a regression line to the calibration data, generating a list for each ion of regression statistics.

```{r}
#cations
lm.cat <-list() #allocate list
for (i in 1:5){
  lm.cat[[i]] <- lm(cat.area[ ,i] ~ cat.conc[ ,i])
}

#anions
lm.an <-list() #allocate list
for (i in 1:6){
  lm.an[[i]] <- lm(an.area[ ,i] ~ an.conc[ ,i])
}

```

## Calculate standard deviation of residuals and extract slope

The residuals are the difference between the observed value of the response (area under the curve) and the area value predicted from the regression line. The standard deviation of the residuals is used to calculate DL.

The slope of the line is also used in the DL equation and is extracted from the regression model here.

```{r}
#cations
sd.resid.cat <- matrix(nrow = 1, ncol=length(lm.cat))
slope.cat<-matrix(nrow = 1, ncol=length(lm.cat))
colnames(sd.resid.cat)<-cat.names
colnames(slope.cat)<-cat.names

for (n in 1:length(lm.cat)){
  sd.resid.cat[,n]<-sd(lm.cat[[n]][["residuals"]])
  slope.cat[,n]<-lm.cat[[n]][["coefficients"]][["cat.conc[, i]"]]
}

#anions
sd.resid.an <- matrix(nrow = 1, ncol=length(lm.an))
slope.an<-matrix(nrow = 1, ncol=length(lm.an))
colnames(sd.resid.an)<-an.names
colnames(slope.an)<-an.names

for (n in 1:length(lm.an)){
  sd.resid.an[,n]<-sd(lm.an[[n]][["residuals"]])
  slope.an[,n]<-lm.an[[n]][["coefficients"]][["an.conc[, i]"]]
}
```

## Calculate detection limit

This evaluates the equation:

DL = 3.3 \* sigma / m

```{r}
#Cations
DL.cat<-matrix(nrow = 1, ncol=length(lm.cat))
colnames(DL.cat)<-cat.names
for (n in 1:length(lm.cat)){
  DL.cat[,n]=3.3*sd.resid.cat[n]/slope.cat[n]
}

#Anions
DL.an<-matrix(nrow = 1, ncol=length(lm.an))
colnames(DL.an)<-an.names
for (n in 1:length(lm.an)){
  DL.an[,n]=3.3*sd.resid.an[n]/slope.an[n]
}

((DL.cat))
((DL.an))
```

## Reprocess Data

```{r}
#cations
for (i in 1:length(DL.cat)){
  cat.samples[i+3][cat.samples[i+3]< DL.cat[i]] <- "<LOD"
}

#anions
for (i in 1:length(DL.an)){
  an.samples[i+3][an.samples[i+3]< DL.an[i]] <- "<LOD"
}

write.csv(cat.samples, file = "Processed Cation Data")
write.csv(an.samples, file = "Processed Anion Data")
```
